Bootstrap: docker
From: alpine:3.19.1
Stage: spython-base

%post


apk update && apk upgrade
if [ "$TARGETPLATFORM" = "linux/arm/v6" ]; then \
apk add --no-cache build-base libatomic gfortran git perl python3 py3-pip linux-headers openssh openmpi-dev python3-dev; \
else \
apk add --no-cache build-base libatomic gfortran git perl python3 py3-pip linux-headers openssh valgrind openmpi-dev python3-dev; \
fi

#### INSTALL OPENMPI ####
# Source is available at https://www.open-mpi.org/software/ompi/

# Build Options:
# These options are passed to the steps below
OPENMPI_VERSION="5.0.5"
OPENMPI_MAJOR_VERSION="v5.0"
OPENMPI_MAKE_OPTIONS=""

# Download, build, and install OPENMPI
# mkdir /tmp/openmpi-src
mkdir -p /tmp/openmpi-src
cd /tmp/openmpi-src
wget https://download.open-mpi.org/release/open-mpi/${OPENMPI_MAJOR_VERSION}/openmpi-${OPENMPI_VERSION}.tar.gz \
&& tar xfz openmpi-${OPENMPI_VERSION}.tar.gz
cd openmpi-${OPENMPI_VERSION} && ./configure ${OPENMPI_CONFIGURE_OPTIONS}
make all ${OPENMPI_MAKE_OPTIONS}
make install
cd ..
rm -rf /tmp/openmpi-src

#### TEST OPENMPI INSTALLATION ####
# RUN mkdir /tmp/mpi-test
# WORKDIR /tmp/mpi-test
# COPY mpi-test .
# RUN sh test.sh
# RUN rm -rf /tmp/mpi-test

#### CLEAN UP ####
mkdir -p /
cd /
# rm -rf /tmp/*

#### ADD DEFAULT USER ####
USER=mpi
USER_HOME=/home/${USER}

# Create the user and set up the home directory
adduser --disabled-password --home ${USER_HOME} ${USER}
chown -R ${USER}:${USER} ${USER_HOME}

#### CREATE WORKING DIRECTORY FOR USER ####
WORKDIR=/project
mkdir -p ${WORKDIR}
chown -R ${USER}:${USER} ${WORKDIR}
mkdir -p ${WORKDIR}
cd ${WORKDIR}
su -  ${USER} # USER ${USER}

pip install --break-system-packages --upgrade pip
pip install --break-system-packages numpy scipy mpi4py python-dotenv

%environment
export USER=${USER}
export USER_HOME=/home/${USER}
export WORKDIR=${WORKDIR}
%runscript
cd ${WORKDIR}
exec /bin/bash "$@"
%startscript
cd ${WORKDIR}
exec /bin/bash "$@"
